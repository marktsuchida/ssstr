# This file is part of the Ssstr string library.
# Copyright 2022 Board of Regents of the University of Wisconsin System
# SPDX-License-Identifier: MIT

name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        compiler:
          - gcc
          - clang
          - clang-cl
          - msvc
        exclude:
          - os: ubuntu
            compiler: msvc
          - os: ubuntu
            compiler: clang-cl
          - os: macos
            compiler: msvc
          - os: macos
            compiler: clang-cl
          - os: windows
            compiler: clang
        include:
          - os: ubuntu
            runner: ubuntu-latest
          - os: macos
            runner: macos-latest
          - os: windows
            runner: windows-latest
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++
          - compiler: clang-cl
            cc: clang-cl
            cxx: clang-cl
          - compiler: msvc
            cc: cl
            cxx: cl
          - os: macos
            compiler: gcc
            # macOS has gcc/g++ pointing to clang/clang++
            cc: gcc-11
            cxx: g++-11
    name: test-${{ matrix.os }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.runner }}
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install tools
        run: |
          python -m pip install --upgrade pip meson ninja
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build and test (debug)
        run: |
          meson setup build-debug --buildtype debug
          meson dist -C build-debug
      - name: Build and test (release)
        run: |
          meson setup build-release --buildtype release
          meson dist -C build-release
      - name: Build with different GCC dialects
        if: matrix.compiler == 'gcc'
        run: |
          meson setup dialects --buildtype debug
          cd dialects
          meson configure -Dc_std=c99 -Dcpp_std=c++03
          meson test
          meson configure -Dc_std=c17 -Dcpp_std=c++20
          meson test
          meson configure -Dc_std=gnu99 -Dcpp_std=gnu++03
          meson test
          meson configure -Dc_std=gnu17 -Dcpp_std=gnu++20
          meson test
      - name: Sanitize
        if: matrix.os == 'ubuntu' && matrix.compiler == 'clang'
        run: |
          meson setup sanitize --buildtype debug -Db_lundef=false
          cd sanitize
          meson configure -Db_sanitize=address,undefined
          meson test
          meson configure -Db_sanitize=memory
          meson test
          meson configure -Db_sanitize=leak
          meson test

  docs:
    needs:
      - lint
      - test
    concurrency:
      group: publish-gh-pages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install tools
        run: |
          python -m pip install --upgrade pip meson ninja
      - name: Build man pages
        run: |
          meson setup builddir
          cd builddir
          ninja htmlman
      - name: Publish to gh-pages
        if: >-
          github.repository == 'marktsuchida/ssstr' &&
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: builddir/htmlman
          commit_message: Deploy from main
