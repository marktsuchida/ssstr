.\" This file is part of the Ssstr string library.
.\" Copyright 2022 Board of Regents of the University of Wisconsin System
.\" SPDX-License-Identifier: MIT
.\"
.TH SS8_FIND_FIRST_OF 3  2022-11-06 SSSTR "Ssstr Manual"
.SH NAME
ss8_find_first_of, ss8_find_first_of_cstr, ss8_find_first_of_bytes,
ss8_find_first_not_of, ss8_find_first_not_of_cstr, ss8_find_first_not_of_bytes,
ss8_find_last_of, ss8_find_last_of_cstr, ss8_find_last_of_bytes,
ss8_find_last_not_of, ss8_find_last_not_of_cstr, ss8_find_last_not_of_bytes \-
find in an ssstr byte string occurrence of a character in or not in a set
.SH SYNOPSIS
.nf
.B #include <ss8str.h>
.PP
.BI "size_t ss8_find_first_of(ss8str const *" haystack ", size_t " start ","
.BI "                         ss8str const *" needles ");"
.BI "size_t ss8_find_first_of_cstr(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ");"
.BI "size_t ss8_find_first_of_bytes(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ","
.BI "                         size_t " count ");"
.PP
.BI "size_t ss8_find_first_not_of(ss8str const *" haystack ","
.BI "                         size_t " start ", ss8str const *" needles ");"
.BI "size_t ss8_find_first_not_of_cstr(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ");"
.BI "size_t ss8_find_first_not_of_bytes(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ","
.BI "                         size_t " count ");"
.PP
.BI "size_t ss8_find_last_of(ss8str const *" haystack ", size_t " start ","
.BI "                         ss8str const *" needles ");"
.BI "size_t ss8_find_last_of_cstr(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ");"
.BI "size_t ss8_find_last_of_bytes(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ","
.BI "                         size_t " count ");"
.PP
.BI "size_t ss8_find_last_not_of(ss8str const *" haystack ","
.BI "                         size_t " start ", ss8str const *" needles ");"
.BI "size_t ss8_find_last_not_of_cstr(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ");"
.BI "size_t ss8_find_last_not_of_bytes(ss8str const *" haystack ","
.BI "                         size_t " start ", char const *" needles ","
.BI "                         size_t " count ");"
.fi
.SH DESCRIPTION
.BR ss8_find_first_of ()
finds the first occurrence of any of the bytes that appear in the
.B ss8str
at
.IR needles ,
in the
.B ss8str
at
.IR haystack .
The search begins at byte position
.IR start .
Behavior is undefined unless
.I haystack
and
.I needles
both point to valid
.B ss8str
objects and
.I start
is less than or equal to the length of the haystack string.
.PP
.BR ss8_find_first_of_cstr ()
is like
.BR ss8_find_first_of ()
but finds the first occurrence of any of the bytes that appear in the
null-terminated byte string
.IR needles .
Behavior is undefined unless
.I haystack
points to a valid
.B ss8str
object,
.I start
is less than or equal to the length of the haystack string, and
.I needles
is a null-terminated byte string.
.PP
.BR ss8_find_first_of_bytes ()
is like
.BR ss8_find_first_of ()
but finds the first occurrence of any of the bytes that appear in the byte
string of length
.I count
located at
.IR needles .
Behavior is undefined unless
.I haystack
points to a valid
.B ss8str
object,
.I start
is less than or equal to the length of the haystack string, and
.I needles
is not NULL and points to an array of at least
.I count
bytes.
.PP
.BR ss8_find_first_not_of (),
.BR ss8_find_first_not_of_cstr (),
and
.BR ss8_find_first_not_of_bytes ()
are like the corresponding functions without the
.B not
in the name, except that they find the first occurrence of a byte that does
not appear in
.IR needles .
.PP
.BR ss8_find_last_of (),
.BR ss8_find_last_of_cstr (),
and
.BR ss8_find_last_of_bytes ()
are like the corresponding functions with
.B first
instead of
.B last
in the name, except that they find the last occurrence of a byte that appears
in
.IR needles .
.PP
.BR ss8_find_last_not_of (),
.BR ss8_find_last_not_of_cstr (),
and
.BR ss8_find_last_not_of_bytes ()
are like the corresponding functions without the
.B not
in the name, except that they find the last occurrence of a byte that does not
appear in
.IR needles .
.SH RETURN VALUE
All 12 functions return the position, counting from the beginning of the
haystack string, of the matching byte.
If there is no matching byte,
.B SIZE_MAX
is returned.
.SH SEE ALSO
.BR ss8_find (3),
.BR ss8_strip (3),
.BR ssstr (7)
